version: '3.8'

services:
  traefik:
    image: traefik:v3.2
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--ping=true"
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${TRAEFIK_DASHBOARD_PORT:-8083}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: marlene-web
    labels:
      - "traefik.enable=true"
      # HTTP router only (no HTTPS/TLS)
      - "traefik.http.routers.web-http.rule=Host(`${DOMAIN:-localhost}`) || Host(`www.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.web-http.entrypoints=web"
      - "traefik.http.routers.web-http.priority=1"
      - "traefik.http.routers.web-http.middlewares=auth-middleware"
      # Service
      - "traefik.http.services.web.loadbalancer.server.port=8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  auth-middleware:
    build:
      context: ./auth-middleware
      dockerfile: Dockerfile
    container_name: auth-middleware
    environment:
      - COOKIE_SECRET=${COOKIE_SECRET:?COOKIE_SECRET environment variable is required}
      - NODE_ENV=development
      - SMTP_HOST=${SMTP_HOST:?SMTP_HOST environment variable is required}
      - SMTP_PORT=${SMTP_PORT:?SMTP_PORT environment variable is required}
      - SMTP_SECURE=${SMTP_SECURE:-false}
      - SMTP_USER=${SMTP_USER:?SMTP_USER environment variable is required}
      - SMTP_PASS=${SMTP_PASS:?SMTP_PASS environment variable is required}
      - SMTP_FROM=${SMTP_FROM}
    labels:
      - "traefik.enable=true"
      # Forward Auth middleware configuration
      - "traefik.http.middlewares.auth-middleware.forwardauth.address=http://auth-middleware:3000/auth"
      - "traefik.http.middlewares.auth-middleware.forwardauth.authRequestHeaders=Cookie"
      - "traefik.http.middlewares.auth-middleware.forwardauth.authResponseHeaders=Location"
      - "traefik.http.middlewares.auth-middleware.forwardauth.addAuthCookiesToResponse=auth_token,user_email"
      # Direct routes for login and code pages (no auth middleware)
      - "traefik.http.routers.auth-pages.rule=Host(`${DOMAIN:-localhost}`) && (PathPrefix(`/login`) || PathPrefix(`/code`))"
      - "traefik.http.routers.auth-pages.entrypoints=web"
      - "traefik.http.routers.auth-pages.priority=100"
      - "traefik.http.routers.auth-pages.service=auth-middleware"
      # Service
      - "traefik.http.services.auth-middleware.loadbalancer.server.port=3000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
